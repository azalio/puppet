#!/usr/bin/env bash
# Application tasks

# Load environment
# shellcheck disable=1090
. "$(cd "$(dirname "${BASH_SOURCE[0]}")/../" && pwd -P)/env.sh"

# Download private data
download_private_data(){
  e_info 'Get dotenv'
  aws s3 cp "${PRIVATE_DATA_S3_PATH}/.env" "${APPDIR}/.env"
  e_info 'Sync hiera data'
  aws s3 sync --delete "$PP_HIERA_S3_PATH" "${APPDIR}/hieradata/"
  e_info 'Get CSR sign configuration'
  aws s3 cp "${PRIVATE_DATA_S3_PATH}/csr/sign.yaml" "${APPDIR}/csr/sign.yaml"
}

# Archive app files
package_app_files(){
  app_archive_path="${TMPDIR}/${APP_ARCHIVE}"

  e_info "Creating application archive (${app_archive_path})"
  if ! tar cvzf "$app_archive_path" \
    bin/  csr/ dist/profile/manifests dist/role/manifests hieradata/ \
    manifests/ lib/ .env env.sh environment.conf Puppetfile LICENSE README.md \
    VERSION;
  then
    e_abort "Could not create ${app_archive_path}"
  fi
}

# Upload archive to S3
upload_app_archive(){
  echo "Uploading app archive to S3 (${APP_ARCHIVE_S3_PATH})"
  if ! aws s3 cp "$app_archive_path" "$APP_ARCHIVE_S3_PATH"; then
    e_abort "Could not upload ${app_archive_path} to ${APP_ARCHIVE_S3_PATH}"
  fi

  echo "Creating latest app archive (${APP_ARCHIVE_S3_PATH_LATEST})"
  if ! aws s3 cp "$APP_ARCHIVE_S3_PATH" "$APP_ARCHIVE_S3_PATH_LATEST"; then
    e_abort "Could not create latest app archive (${APP_ARCHIVE_S3_PATH_LATEST})"
  fi
}

# Update app
update_app(){
  download_private_data
}

# Clean-up
clean_app(){
  e_info "Cleaning-up ${app_archive_path}"
  rm "$app_archive_path" || true
}

# xVARs
e_header 'INFO:'
e_info "Application directory: ${APPDIR:?}"
e_info "Temporary directory: ${TMPDIR:?}"
e_info "Version: ${VERSION:?}"
e_info "Is CI: ${CI:?}"
e_info "AWS Assets bucket: ${AWS_ASSETS_BUCKET:?}"
e_info "App archive name: ${APP_ARCHIVE:?}"
e_info "App archive S3 key: ${APP_ARCHIVE_S3_KEY:?}"
e_info "App archive S3 path: ${APP_ARCHIVE_S3_PATH:?}"
e_info "App archive S3 path: ${APP_ARCHIVE_S3_PATH_LATEST:?}"
e_info "Private data S3 path: ${PRIVATE_DATA_S3_PATH:?}"

# Process arguments
e_header 'Application:'
case "${1:-}" in
  upload)
    package_app_files && upload_app_archive && clean_app
    ;;
  download)
    download_private_data
    ;;
  update)
    update_app
    ;;
  *)
    e_abort "USAGE: ${BASH_SOURCE[0]} [upload | download | update]"
    ;;
esac
