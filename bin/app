#!/usr/bin/env bash
# Application tasks

# Load environment
# shellcheck disable=1090
. "$(cd "$(dirname "${BASH_SOURCE[0]}")/../" && pwd -P)/env.sh"

package_app_files(){
  app_archive_path="${TMPDIR}/${APP_ARCHIVE}"

  e_info "Creating application archive (${app_archive_path})"
  if ! tar cvzf "$app_archive_path" \
    bin/ data/ dist/profile/manifests dist/role/manifests manifests/ \
    .env bootstrap env.sh environment.conf Puppetfile \
    LICENSE README.md VERSION;
  then
    e_abort "Could not create ${app_archive_path}"
  fi
}

upload_app_archive(){
  echo "Uploading app archive to S3 (${APP_ARCHIVE_S3_PATH})"
  if ! aws s3 cp "$app_archive_path" "$APP_ARCHIVE_S3_PATH"; then
    e_abort "Could not upload ${app_archive_path} to ${APP_ARCHIVE_S3_PATH}"
  fi

  echo "Creating latest app archive (${APP_ARCHIVE_S3_PATH_LATEST})"
  if ! aws s3 cp "$APP_ARCHIVE_S3_PATH" "$APP_ARCHIVE_S3_PATH_LATEST"; then
    e_abort "Could not create latest app archive (${APP_ARCHIVE_S3_PATH_LATEST})"
  fi
}

# xVARs
e_header 'INFO:'
e_info "Application directory: ${APPDIR:?}"
e_info "Temporary directory: ${TMPDIR:?}"
e_info "Version: ${VERSION:?}"
e_info "AWS Assets bucket: ${AWS_ASSETS_BUCKET:?}"
e_info "App archive name: ${APP_ARCHIVE:?}"
e_info "App archive S3 key: ${APP_ARCHIVE_S3_KEY:?}"
e_info "App archive S3 path: ${APP_ARCHIVE_S3_PATH:?}"
e_info "App archive S3 path: ${APP_ARCHIVE_S3_PATH_LATEST:?}"

# Process arguments
e_header 'Application:'
case "${1:-}" in
  upload)
    package_app_files && upload_app_archive
    ;;
  *)
    e_abort "USAGE: ${BASH_SOURCE[0]} [upload]"
    ;;
esac
